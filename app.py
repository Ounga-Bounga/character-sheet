# 1. Configuration de la page
st.set_page_config(
    page_title="Cr√©ateur de fiche de personnage",
    page_icon="üé≤",
    layout="wide",
    initial_sidebar_state="expanded"
)

# 2. Injection CSS pour centrer titre et sous-titres
st.markdown("""
    <style>
      h1, h2, h3 { text-align: center !important; }
    </style>
    """, unsafe_allow_html=True)

# 3. Titre principal centr√©
st.markdown("<h1>‚ú®Abra Cadabra‚ú®</h1>", unsafe_allow_html=True)

# 4. Widgets d‚Äôentr√©e
st.header("Cr√©er ton personnage lvl 1 !")

# Colonnes r√©parties √©galement en quatre
col1, col2, col3, col4 = st.columns([2.5, 2.5, 2.5, 2.5])

with col1:
    st.markdown("**ü§ñ Comment t'appelles-tu ?**")
    nom = st.text_input("Nom du personnage")

with col2:
    st.markdown("**‚öîÔ∏è Choisis ta posture de base**")
    posture = st.selectbox(
        "", ["‚îÄ‚îÄ", "Posture Agressive", "Posture Defensive", "Posture Focus"], key="posture"
    )
    posture_bonuses = {
        "Posture Agressive": (
            "Tes armes infligent les d√©g√¢ts max +1.\n"
            "Tes coups critiques passent √† 10 %."
        ),
        "Posture Defensive": "Tu peux parer ou esquiver gr√¢ce √† un jet de Physique r√©ussi.",
        "Posture Focus": (
            "Tes sorts co√ªtent 1 PM en moins.\n"
            "Gagne +5 % aux caract√©ristiques."
        )
    }
    if posture != "‚îÄ‚îÄ":
        st.markdown(
            f"<div style='text-align:left; white-space:pre-line; font-size:0.9rem;'>{posture_bonuses[posture]}</div>",
            unsafe_allow_html=True
        )

with col3:
    st.markdown("**üõ°Ô∏è Choisis ton type de classe**")
    classe = st.selectbox(
        "", ["‚îÄ‚îÄ", "Lourde", "Moyenne", "L√©g√®re"], key="classe"
    )
    class_info = {
        "Lourde": "+4 pv\n-2 pm\n1 sort magique",
        "Moyenne": "+1 pv\n+1 pm\n2 sorts magiques",
        "L√©g√®re": "-3 pv\n+3 pm\n3 sorts magiques"
    }
    if classe != "‚îÄ‚îÄ":
        st.markdown(
            f"<div style='text-align:left; white-space:pre-line; font-size:0.9rem;'>{class_info[classe]}</div>",
            unsafe_allow_html=True
        )

# 5. Calcul des PV / PM selon la classe
base_pv, base_pm = 6, 4
mod_map = {"Lourde": (4, -2), "Moyenne": (1, 1), "L√©g√®re": (-2, 3)}
mod_pv, mod_pm = mod_map.get(classe, (0, 0))
pv, pm = base_pv + mod_pv, base_pm + mod_pm

with col4:
    st.markdown("**‚ù§Ô∏è Tes PV & PM**")
    st.markdown(f"ü©∏ **PV ‚Üí {pv}**")
    st.markdown(f"‚ú® **PM ‚Üí {pm}**")

# 6. Quelles sont tes Statistiques ?
st.markdown("<h2>üìä Quelles sont tes Statistiques ?</h2>", unsafe_allow_html=True)
stats_col1, stats_col2, stats_col3 = st.columns(3)
with stats_col1:
    st.markdown("<h3>üí™ Physique</h3>", unsafe_allow_html=True)
    physique = st.slider("", 30, 70, 30, step=5, key="physique")
with stats_col2:
    st.markdown("<h3>üß† Mental</h3>", unsafe_allow_html=True)
    mental = st.slider("", 30, 70, 30, step=5, key="mental")
with stats_col3:
    st.markdown("<h3>üó£Ô∏è Social</h3>", unsafe_allow_html=True)
    social = st.slider("", 30, 70, 30, step=5, key="social")

# V√©rification de la somme et affichage du % restant ou exc√©dent
total_stats = physique + mental + social
if total_stats < 170:
    st.warning(f"Il reste {170 - total_stats}% √† r√©partir.")
elif total_stats > 170:
    st.error(f"Tu as d√©pass√© de {total_stats - 170}%. R√©duis tes statistiques.")

# 7. Choisis tes comp√©tences
st.markdown("<h2>üìù Choisis tes Bonus de Statistiques</h2>", unsafe_allow_html=True)
skills = [
    "Discr√©tion +10 %", "Combats aux lames +10 %", "Artisanat +10 %", "Persuasion +10 %",
    "Tromperie +10 %", "Arcane +10 %", "Survie +10 %", "Athl√©tisme +10 %",
    "Perception +10 %", "Histoire +10 %", "Botanique +10 %", "M√©canisme +10 %",
    "Natation +10 %", "Pilotage +10 %", "N√©gociation +10 %", "Investigation +10 %",
    "Intimidation +10 %", "Danse +10 %", "Acrobatie +10 %", "Soin +10 %"
]
cols_comp = st.columns(4)
choix_competences = []
for i in range(4):
    with cols_comp[i]:
        choix = st.selectbox(f"Comp√©tence {i+1}", ["‚îÄ‚îÄ"] + skills, key=f"comp{i+1}")
        choix_competences.append(choix)

# 8. Choix de l'arme principale, secondaire et armure
st.markdown("<h2>üõ†Ô∏è  Arme & Armure</h2>", unsafe_allow_html=True)
arm_cols = st.columns(3)
with arm_cols[0]:
    st.markdown("**Arme Principale**")
    arme1 = st.selectbox("", [
        "‚îÄ‚îÄ", "1d4 - dague/poing", "1d6 - √©p√©e/arc", "1d8 - √©p√©e longue",
        "1d10 - √©p√©e √† deux mains", "1d12 - arbal√®te lourde", "Fusil/Pistolet (recharge mouvement)"
    ], key="arme1")
with arm_cols[1]:
    st.markdown("**Arme Secondaire**")
    arme2 = st.selectbox("", [
        "‚îÄ‚îÄ", "1d4 - dague/poing", "1d6 - √©p√©e/arc", "1d8 - √©p√©e longue",
        "1d10 - √©p√©e √† deux mains", "1d12 - arbal√®te lourde", "Fusil/Pistolet (recharge mouvement)"
    ], key="arme2")
with arm_cols[2]:
    st.markdown("**Type d'Armure**")
    armure = st.selectbox("", [
        "‚îÄ‚îÄ", "Prot√®ge 3 (armure lourde)", "Prot√®ge 2 (armure moyenne)", "Prot√®ge 1 (armure l√©g√®re)"
    ], key="armure")

# 9. √âquipement
st.markdown("<h2>üéí √âquipement</h2>", unsafe_allow_html=True)
eq_cols = st.columns(2)
equipement_options = [
    "Corde 10m", "Torche", "Sac √† dos", "Tente", "Rations (1 jour)", "Trousse de soin", 
    "Bourse de pi√®ces", "Grappin", "Plume et encre", "Livre de sorts", "Bottes de voyage", 
    "Amulette de protection", "Potion de soin", "Carte de la r√©gion", "B√¢ton de marche", 
    "Lanterne", "Tenue de camouflage", "Couteau de lancer", "Fiole d'huile", "Autre"
]
equipement = []
for col in eq_cols:
    for idx in range(4):
        key = f"equip_{eq_cols.index(col)}_{idx}"
        choix_eq = col.selectbox(f"Equipement {eq_cols.index(col)*4 + idx+1}", ["‚îÄ‚îÄ"] + equipement_options, key=key)
        if choix_eq == "Autre":
            autres = col.text_input("Pr√©cisez autre √©quipement", key=f"other_{key}")
            equipement.append(autres)
        else:
            equipement.append(choix_eq)

# (le reste de ton code suit ici...)
